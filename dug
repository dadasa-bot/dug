local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CameraLockGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Create Button
local textButton = Instance.new("TextButton")
textButton.Name = "LockButton"
textButton.Size = UDim2.new(0, 200, 0, 50)
textButton.Position = UDim2.new(0.5, -100, 0.5, -25)
textButton.Text = "Lock Camera"
textButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
textButton.TextColor3 = Color3.new(1, 1, 1)
textButton.Font = Enum.Font.SourceSans
textButton.TextSize = 24
textButton.Active = true
textButton.Draggable = true
textButton.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 12)
uiCorner.Parent = textButton

-- State
local isLocked = false
local lockedTarget = nil
local followConnection = nil

-- Find nearest player
local function getNearestPlayer()
	local myChar = LocalPlayer.Character
	if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then return nil end

	local closestPlayer = nil
	local shortestDistance = math.huge

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (myChar.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
			if distance < shortestDistance then
				shortestDistance = distance
				closestPlayer = player
			end
		end
	end

	return closestPlayer
end

-- Toggle tracking
textButton.MouseButton1Click:Connect(function()
	if not isLocked then
		local targetPlayer = getNearestPlayer()
		if not (targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then
			warn("No valid player to lock on.")
			return
		end

		lockedTarget = targetPlayer
		isLocked = true
		textButton.Text = "Unlock Camera"
		Camera.CameraType = Enum.CameraType.Scriptable

		local smoothSpeed = 0.1 -- lower = slower smoothing
		local predictionTime = 0.2 -- seconds into the future

		followConnection = RunService.RenderStepped:Connect(function(dt)
			if lockedTarget and lockedTarget.Character and lockedTarget.Character:FindFirstChild("HumanoidRootPart") then
				local root = lockedTarget.Character.HumanoidRootPart
				local velocity = root.Velocity

				-- Predict future position
				local predictedPosition = root.Position + (velocity * predictionTime)
				local cameraOffset = Vector3.new(0, 6, -12)
				local cameraGoal = CFrame.new(predictedPosition + cameraOffset, predictedPosition)

				-- Smooth transition
				Camera.CFrame = Camera.CFrame:Lerp(cameraGoal, smoothSpeed)
			end
		end)

		print("Camera locked on: " .. targetPlayer.Name)

	else
		-- Unlock
		isLocked = false
		if followConnection then followConnection:Disconnect() end
		Camera.CameraType = Enum.CameraType.Custom
		textButton.Text = "Lock Camera"
		print("Camera unlocked.")
	end
end)

