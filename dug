-- CONFIGURATION
getgenv().AimbotSettings = {
    Enabled = true,
    AimKey = Enum.UserInputType.MouseButton2, -- Right-click
    Prediction = 0.15,
    Smoothness = 0.12
}

-- SERVICES
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- STATE
local AimbotOn = false
local Target = nil

-- FUNCTIONS
local function GetClosestPlayer()
    local closestDistance = math.huge
    local closestPlayer = nil

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local head = player.Character:FindFirstChild("Head")
            local screenPoint, onScreen = Camera:WorldToViewportPoint(head.Position)
            if onScreen then
                local distance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    return closestPlayer
end

-- AIMBOT LOOP
RunService.RenderStepped:Connect(function()
    if AimbotOn and Target and Target.Character and Target.Character:FindFirstChild("HumanoidRootPart") then
        local head = Target.Character:FindFirstChild("Head")
        if head then
            local predictedPosition = head.Position + (head.Velocity * getgenv().AimbotSettings.Prediction)
            local direction = (predictedPosition - Camera.CFrame.Position).Unit
            local newCF = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + direction)
            Camera.CFrame = Camera.CFrame:Lerp(newCF, getgenv().AimbotSettings.Smoothness)
        end
    end
end)

-- INPUT HANDLING
UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and input.UserInputType == getgenv().AimbotSettings.AimKey then
        AimbotOn = true
        Target = GetClosestPlayer()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == getgenv().AimbotSettings.AimKey then
        AimbotOn = false
        Target = nil
    end
end)

