local Players = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()

-- UI Setup
local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.Name = "CamlockUI"

-- Camlock Button
local btn = Instance.new("TextButton")
btn.Size = UDim2.new(0, 120, 0, 40)
btn.Position = UDim2.new(0, 30, 0, 30)
btn.Text = "Camlock: OFF"
btn.TextScaled = true
btn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
btn.TextColor3 = Color3.fromRGB(0, 0, 0)
btn.Font = Enum.Font.GothamBold
btn.Draggable = true
btn.Active = true
btn.AutoButtonColor = false
btn.Parent = screenGui

local btnCorner = Instance.new("UICorner", btn)
btnCorner.CornerRadius = UDim.new(0, 10)

-- Tween Functions
local function tweenColor(button, color)
	TweenService:Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
		BackgroundColor3 = color
	}):Play()
end

local function tweenScale(button)
	local tweenGrow = TweenService:Create(button, TweenInfo.new(0.1), { Size = UDim2.new(0, 125, 0, 45) })
	local tweenShrink = TweenService:Create(button, TweenInfo.new(0.1), { Size = UDim2.new(0, 120, 0, 40) })
	tweenGrow:Play()
	tweenGrow.Completed:Connect(function()
		tweenShrink:Play()
	end)
end

-- Camlock Settings
local camlockEnabled = false
local currentTarget = nil
local range = 10000
local prediction = 0.125 -- Default prediction value
local smoothness = 0.9  -- Default smoothness value
local jumpOffset = 0.06 -- Add offset for players jumping
local maxFov = 100  -- Max field of view for targeting accuracy

-- Notification function
local function notify(title, text)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 4,
			Icon = "rbxassetid://9478562327"
		})
	end)
end

-- Get closest player to cursor with better targeting
local function getClosestToCursor()
	local closestPlayer = nil
	local closestDist = math.huge
	local mousePos = Vector2.new(Mouse.X, Mouse.Y)

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local hrp = player.Character.HumanoidRootPart
			local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
			local distanceFromCursor = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
			local worldDistance = (Camera.CFrame.Position - hrp.Position).Magnitude

			-- Check if player is within range and on screen
			if onScreen and distanceFromCursor < closestDist and worldDistance <= range then
				closestDist = distanceFromCursor
				closestPlayer = player
			end
		end
	end

	return closestPlayer
end

-- Advanced Camera Lock Logic with better prediction and smoothness
RunService.RenderStepped:Connect(function()
	if camlockEnabled and currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = currentTarget.Character.HumanoidRootPart
		local humanoid = currentTarget.Character:FindFirstChild("Humanoid")

		-- Apply prediction and smoothness directly
		local predictedPosition = hrp.Position + (hrp.Velocity * prediction)

		-- Apply jump offset if player is jumping
		if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Physics then
			predictedPosition = predictedPosition + Vector3.new(0, jumpOffset, 0)
		end

		local camPos = Camera.CFrame.Position
		local direction = (predictedPosition - camPos).Unit
		local lerpedDir = Camera.CFrame.LookVector:Lerp(direction, math.clamp(smoothness, 0, 1))

		-- Smooth camera transition
		Camera.CFrame = CFrame.new(camPos, camPos + lerpedDir)
	end
end)

-- Toggle Camlock with better UI interaction
btn.MouseButton1Click:Connect(function()
	tweenScale(btn)

	if not camlockEnabled then
		currentTarget = getClosestToCursor()
		if currentTarget then
			camlockEnabled = true
			btn.Text = "Camlock: ON"
			tweenColor(btn, Color3.fromRGB(0, 255, 0))
			notify("Skidder.cc Camlock", "Locked onto: " .. currentTarget.Name)
		else
			btn.Text = "Camlock: OFF"
			tweenColor(btn, Color3.fromRGB(255, 0, 0))
			notify("Skidder.cc Camlock", "No player found near mouse/camera.")
		end
	else
		camlockEnabled = false
		currentTarget = nil
		btn.Text = "Camlock: OFF"
		tweenColor(btn, Color3.fromRGB(255, 0, 0))
		notify("Skidder.cc Camlock", "Camlock disabled.")
	end
end)
