local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- UI Setup
local screenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
screenGui.Name = "AimbotLockGUI"
screenGui.ResetOnSpawn = false

local textButton = Instance.new("TextButton")
textButton.Size = UDim2.new(0, 200, 0, 50)
textButton.Position = UDim2.new(0.5, -100, 0.9, -25)
textButton.Text = "Lock Aimbot"
textButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
textButton.TextColor3 = Color3.new(1, 1, 1)
textButton.Font = Enum.Font.SourceSansBold
textButton.TextSize = 22
textButton.Draggable = true
textButton.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 12)
uiCorner.Parent = textButton

-- Aimbot State
local isAimbotOn = false
local aimbotConnection = nil

-- SETTINGS
local predictionTime = 0.2
local smoothingSpeed = 0.1
local maxAimbotRange = 100 -- Maximum range for aimbot (meters)
local maxFOV = math.rad(60) -- Field of view for aimbot targeting (optional)

-- Function to check if the player is an enemy
local function isEnemy(targetPlayer)
    return targetPlayer.Team ~= LocalPlayer.Team
end

-- Find nearest enemy player within range and FOV
local function getNearestEnemy()
    local myChar = LocalPlayer.Character
    if not myChar or not myChar:FindFirstChild("Head") then return nil end

    local myPos = myChar.Head.Position
    local closest = nil
    local shortestDist = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") and isEnemy(player) then
            local head = player.Character.Head
            local dist = (myPos - head.Position).Magnitude

            -- Check if the player is within the max range and FOV
            local directionToTarget = (head.Position - myPos).unit
            local cameraDirection = Camera.CFrame.LookVector

            local angle = math.acos(cameraDirection:Dot(directionToTarget))
            if dist < shortestDist and angle < maxFOV and dist < maxAimbotRange then
                shortestDist = dist
                closest = player
            end
        end
    end

    return closest
end

-- Toggle Aimbot with Button
textButton.MouseButton1Click:Connect(function()
    isAimbotOn = not isAimbotOn

    if isAimbotOn then
        textButton.Text = "Unlock Aimbot"
        print("Aimbot ON")

        aimbotConnection = RunService.RenderStepped:Connect(function()
            local target = getNearestEnemy()
            local char = LocalPlayer.Character

            if target and target.Character and target.Character:FindFirstChild("Head") and char and char:FindFirstChild("Head") then
                local myHead = char.Head
                local targetHead = target.Character.Head
                local targetVelocity = targetHead.Velocity

                -- Predict the target's future position
                local predictedPosition = targetHead.Position + targetVelocity * predictionTime

                -- Aim at the predicted position
                local direction = (predictedPosition - myHead.Position).Unit
                local desiredCFrame = CFrame.new(Camera.CFrame.Position, myHead.Position + direction)

                -- Smooth the transition using Lerp
                Camera.CFrame = Camera.CFrame:Lerp(desiredCFrame, smoothingSpeed)
            end
        end)
    else
        if aimbotConnection then aimbotConnection:Disconnect() end
        textButton.Text = "Lock Aimbot"
        print("Aimbot OFF")
    end
end)




